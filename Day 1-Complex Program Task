abstract class Vehicle{
  public String colour;
  Vehicle(String colour){
      this.colour=colour;
  };
  abstract void displaymodel();
  abstract void displaywheels();
  abstract void displayspeed();
  protected static void accelerate(){
      System.out.println("Accelerating Protectedly... \n");
  };
}

class Bike extends Vehicle{
    private String model;
    private int wheels;
    private int speed;
    
    Bike(String model,int wheels,int speed,String colour){
    super(colour);
        this.model=model;
        this.wheels=wheels;
        this.speed=speed;
        
    }
  public void displaymodel(){
    System.out.println("Model of Vehicle is "+model);
  }
  public void displaywheels(){
    System.out.println("Wheels of a Vehicle are "+wheels);
  }
  public void displayspeed(){
    System.out.println("Speed of the Vehicle is "+speed);
  
    System.out.println("Colour of the Vehicle is.. "+colour);
}
 
}

class Car extends Vehicle{
   private String model;
    private int wheels;
    private int speed;
    
     Car(String model,int wheels,int speed,String colour){
         super(colour);
        this.model=model;
        this.wheels=wheels;
        this.speed=speed;
        
    }
  public void displaymodel(){
    System.out.println("Model of Vehicle is "+model);
  }
  public void displaywheels(){
    System.out.println("Wheels of a Vehicle are "+wheels);
  }
  public void displayspeed(){
    System.out.println("Speed of the Vehicle is "+speed);
    System.out.println("Colour of the Vehicle is .."+colour);
  
}
}


public class Program{
     public  static void displayall(Vehicle b){
      b.displaymodel();
      b.displaywheels();
      b.displayspeed();
      b.accelerate();
    }
    public static void main(String args[]){
      Vehicle b=new Bike("Unicorn",2,140,"Black");
      Vehicle c=new Car("BMW",4,300,"White");     
       displayall(b);
       displayall(c);
    }
    
   
}
